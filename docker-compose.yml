version: '3.8'

services:
  # PostgreSQL 15 + TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: cryptosignal-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cryptosignal
      # PostgreSQL 性能配置
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
    command:
      - "postgres"
      - "-c"
      - "max_connections=200"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=128MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "max_wal_size=2GB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "timezone=UTC"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cryptosignal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    shm_size: 256mb

  # Redis 7
  redis:
    image: redis:7-alpine
    container_name: cryptosignal-redis
    environment:
      # Redis 配置
      REDIS_ARGS: "--maxmemory 512mb --maxmemory-policy allkeys-lru"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - cryptosignal-network
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --save 300 1
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

# 数据卷
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# 网络
networks:
  cryptosignal-network:
    driver: bridge

